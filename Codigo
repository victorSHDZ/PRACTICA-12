#VICTOR ALEJANDRO SALAZAR HERNANDEZ     19110352   7E
#PRACTICA 12

import numpy as np
import matplotlib.pyplot as plt

def convolution(h,x):

    #Folding h
    fh = np.flip(h)

    #Arreglo de respuesta a la convolucion
    rc = np.zeros(h.size + x.size - 1)

    #Copia señal original con ceros al inicio y al final
    cx = np.insert(x,0, np.zeros(h.size -1)) #Ceros al inicio
    cx = np.insert(cx, cx.size, np.zeros(h.size-1))

    #Ciclos for para las variables n y k
    for n in np.arange(0, rc.size):
        for k in np.arange(0,h.size):
            idcx = k + n
            rc[n] = rc[n] + fh[k]*cx[idcx]


    return rc

h = np.array([1,-1])
x = np.array([1])

print (convolution(h,x))
print(np.convolve(h,x))

#ejemplo
t = np.arange(0,10,0.1)
h = np.array([1/3, 1/3 , 1/3])
x = 5 * np.sin(0.2 * np.pi * t) + np.random.rand(t.size)

plt.figure()
plt.grid()
plt.title("señal original")
plt.plot(t,x)
plt.show()

plt.figure()
plt.grid()
plt.title("señal con convulsion")
plt.plot(t,convolution(h,x)[:x.size])
plt.show()
